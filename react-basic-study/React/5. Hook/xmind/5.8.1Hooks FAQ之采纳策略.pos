{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"20c25e0a8bcb","children":[{"parent":"f78f08564058","children":[{"parent":"c68810337d42","children":[],"id":"df541e67f056","title":"React&nbsp;DOM、React&nbsp;Native、React&nbsp;DOM&nbsp;Server<br>React&nbsp;Test&nbsp;Renderer、React&nbsp;Shallow&nbsp;Renderer"}],"id":"c68810337d42","title":"从&nbsp;16.8.0&nbsp;开始，React&nbsp;在以下模块中包含了&nbsp;React&nbsp;Hook&nbsp;的稳定实现"}],"id":"f78f08564058","title":"哪个版本的&nbsp;React&nbsp;包含了&nbsp;Hook？","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"20c25e0a8bcb","children":[{"parent":"3879dd9b233d","children":[],"id":"a2115d3b618d","title":"不"}],"id":"3879dd9b233d","title":"我需要重写所有的&nbsp;class&nbsp;组件吗？","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"20c25e0a8bcb","children":[{"parent":"9ad2ebdb547a","children":[],"id":"6d16ef351226","title":"Hook&nbsp;提供了强大而富有表现力的方式来在组件间复用功能"}],"id":"9ad2ebdb547a","title":"有什么是&nbsp;Hook&nbsp;能做而&nbsp;class&nbsp;做不到的？","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#C8E6C9","lineStype":{"lineType":"curve","lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"20c25e0a8bcb","title":"一","icons":[]},{"parent":"root","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"4a4e937a1166","children":[{"parent":"26f6456c6af4","children":[],"id":"0075c9c11dc4","title":"Hook&nbsp;是使用你已经知道的&nbsp;React&nbsp;特性的一种更直接的方式&nbsp;——&nbsp;比如&nbsp;state，生命周期，context，以及&nbsp;refs。它们并没有从根本上改变&nbsp;React&nbsp;的工作方式，你对组件，props,&nbsp;以及自顶向下的数据流的知识并没有改变"}],"id":"26f6456c6af4","title":"我的&nbsp;React&nbsp;知识还有多少是仍然有用的？","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"4a4e937a1166","children":[{"parent":"38155145bf86","children":[],"id":"ca2c8964c0e9","title":"当你准备好了，我们鼓励你在写新组件的时候开始尝试&nbsp;Hook"}],"id":"38155145bf86","title":"我应该使用&nbsp;Hook，class，还是两者混用？","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"4a4e937a1166","children":[{"parent":"b91414026afa","children":[],"id":"dc23883dfdff","title":"我们给&nbsp;Hook&nbsp;设定的目标是尽早覆盖&nbsp;class&nbsp;的所有使用场景"}],"id":"b91414026afa","title":"Hook&nbsp;能否覆盖&nbsp;class&nbsp;的所有使用场景？<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#FFCDD2","lineStype":{"lineType":"curve","lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"4a4e937a1166","title":"二"},{"parent":"root","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"children":[{"parent":"90f72e9b7182","children":[{"parent":"b06f894eea5b","children":[],"id":"04ae16e62d60","title":"通常，render&nbsp;props&nbsp;和高阶组件只渲染一个子节点。我们认为让&nbsp;Hook&nbsp;来服务这个使用场景更加简单。这两种模式仍有用武之地"}],"id":"b06f894eea5b","title":"Hook&nbsp;会替代&nbsp;render&nbsp;props&nbsp;和高阶组件吗？","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"90f72e9b7182","children":[{"parent":"ee780be90c30","children":[],"id":"dc5413fe5cfb","title":"你可以继续使用之前使用的&nbsp;API；它们仍会继续有效"}],"id":"ee780be90c30","title":"Hook&nbsp;对于&nbsp;Redux&nbsp;connect()&nbsp;和&nbsp;React&nbsp;Router&nbsp;等流行的&nbsp;API&nbsp;来说，意味着什么？","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"90f72e9b7182","children":[{"parent":"b47ade5cf9b0","children":[],"id":"8e455d51da7c","title":"Hook&nbsp;在设计阶段就考虑了静态类型的问题。因为它们是函数，所以它们比像高阶组件这样的模式更易于设定正确的类型。最新版的&nbsp;Flow&nbsp;和&nbsp;TypeScript&nbsp;React&nbsp;定义已经包含了对&nbsp;React&nbsp;Hook&nbsp;的支持<br>"}],"id":"b47ade5cf9b0","title":"Hook&nbsp;能和静态类型一起用吗？","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#E0E0E0","lineStype":{"lineType":"curve","lineColor":"#FFE0B2","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"90f72e9b7182","title":"三"},{"parent":"root","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"children":[{"parent":"a5fa884e620f","children":[{"parent":"d3742cff6e16","children":[],"id":"3e687d1564af","title":"在&nbsp;React&nbsp;看来，一个使用了&nbsp;Hook&nbsp;的组件只不过是一个常规组件。如果你的测试方案不依赖于&nbsp;React&nbsp;的内部实现，测试带&nbsp;Hook&nbsp;的组件应该和你通常测试组件的方式没什么差别"},{"parent":"d3742cff6e16","children":[],"id":"edee585630b7","title":"我们会使用&nbsp;React&nbsp;DOM&nbsp;来测试它。为了确保它表现得和在浏览器中一样，我们会把代码渲染的部分包裹起来，并更新为&nbsp;ReactTestUtils.act()&nbsp;调用"}],"id":"d3742cff6e16","title":"如何测试使用了&nbsp;Hook&nbsp;的组件？","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"a5fa884e620f","children":[{"parent":"bef60e8cb745","children":[],"id":"cc3dd8e3e37b","title":"我们提供了一个&nbsp;ESLint&nbsp;插件&nbsp;来强制&nbsp;Hook&nbsp;规范&nbsp;以避免&nbsp;Bug。它假设任何以&nbsp;「use」&nbsp;开头并紧跟着一个大写字母的函数就是一个&nbsp;Hook。我们知道这种启发方式并不完美，甚至存在一些伪真理，但如果没有一个全生态范围的约定就没法让&nbsp;Hook&nbsp;很好的工作&nbsp;——&nbsp;而名字太长会让人要么不愿意采用&nbsp;Hook，要么不愿意遵守约定"},{"parent":"bef60e8cb745","children":[{"parent":"4f4582aa5bb6","children":[],"id":"b73d98c8fa9f","title":"对&nbsp;Hook&nbsp;的调用要么在一个大驼峰法命名的函数（视作一个组件）内部，要么在另一个&nbsp;useSomething&nbsp;函数（视作一个自定义&nbsp;Hook）中。"},{"parent":"4f4582aa5bb6","children":[],"id":"43856eabe476","title":"Hook&nbsp;在每次渲染时都按照相同的顺序被调用。"}],"id":"4f4582aa5bb6","title":"规范尤其强制了以下内容："}],"id":"bef60e8cb745","title":"lint&nbsp;规则具体强制了哪些内容？","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#BBDEFB","lineStype":{"lineType":"curve","lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"a5fa884e620f","title":"四"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"rgb(255, 83, 92)","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":15,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"采纳策略","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"38"}],"structure":"mind_right"}},"meta":{"exportTime":"2022-04-10 23:15:18","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-10 23:06:09","modified":"2022-04-10 23:15:04","title":"5.8.1Hooks FAQ之采纳策略","category":"mind_free"},"id":"6252f261e0b34d0748ba173e","type":"ProcessOn Schema File","version":"1.0"}}