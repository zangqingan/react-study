{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"20c25e0a8bcb","children":[],"id":"59bd212dcad9","title":"setState()&nbsp;会对一个组件的&nbsp;state&nbsp;对象安排一次更新。当&nbsp;state&nbsp;改变了，该组件就会重新渲染"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":12,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#F5F5F5","lineStype":{"lineType":"curve","lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0","border-style":"none"},"id":"20c25e0a8bcb","title":"setState&nbsp;实际做了什么？<br>"},{"parent":"root","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"4a4e937a1166","children":[],"id":"4f9bb6b0a68c","title":"props（“properties”&nbsp;的缩写）和&nbsp;state&nbsp;都是普通的&nbsp;JavaScript&nbsp;对象。它们都是用来保存信息的，这些信息可以控制组件的渲染输出，而它们的一个重要的不同点就是：props&nbsp;是传递给组件的（类似于函数的形参），而&nbsp;state&nbsp;是在组件内被组件自己管理的（类似于在一个函数内声明的变量）"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":12,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#F5F5F5","lineStype":{"lineType":"curve","lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0","border-style":"none"},"id":"4a4e937a1166","title":"state&nbsp;和&nbsp;props&nbsp;之间的区别是什么？"},{"parent":"root","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"children":[{"parent":"90f72e9b7182","children":[],"id":"ae4869720212","title":"在&nbsp;React&nbsp;中，this.props&nbsp;和&nbsp;this.state&nbsp;都代表着已经被渲染了的值，即当前屏幕上显示的值。<br>调用&nbsp;setState&nbsp;其实是异步的&nbsp;——&nbsp;不要指望在调用&nbsp;setState&nbsp;之后，this.state&nbsp;会立即映射为新的值。如果你需要基于当前的&nbsp;state&nbsp;来计算出新的值，那你应该传递一个函数，而不是一个对象"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":12,"bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#F5F5F5","lineStype":{"lineType":"curve","lineColor":"#FFE0B2","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"90f72e9b7182","title":"为什么&nbsp;setState&nbsp;给了我一个错误的值？"},{"parent":"root","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"children":[{"parent":"a5fa884e620f","children":[],"id":"48016c26d966","title":"给&nbsp;setState&nbsp;传递一个函数，而不是一个对象，就可以确保每次的调用都是使用最新版的&nbsp;state"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":12,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#F5F5F5","lineStype":{"lineType":"curve","lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"a5fa884e620f","title":"我应该如何更新那些依赖于当前的&nbsp;state&nbsp;的&nbsp;state&nbsp;呢？"},{"parent":"root","lineStyle":{"randomLineColor":"rgb(255,204,204)","lineColor":"#BBDEFB"},"children":[{"parent":"812b3a9306dd","children":[],"id":"b94be8213b2a","title":"传递一个函数可以让你在函数内访问到当前的&nbsp;state&nbsp;的值。因为&nbsp;setState&nbsp;的调用是分批的，所以你可以链式地进行更新，并确保它们是一个建立在另一个之上的，这样才不会发生冲突"}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":12,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"812b3a9306dd","title":"给&nbsp;setState&nbsp;传递一个对象与传递一个函数的区别是什么？<br>"},{"parent":"root","lineStyle":{"lineColor":"#E1BEE7"},"children":[{"parent":"3b7f7da9d693","children":[],"id":"2fcf18c41c22","title":"目前，在事件处理函数内部的&nbsp;setState&nbsp;是异步的"}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":12},"id":"3b7f7da9d693","title":"setState&nbsp;什么时候是异步的？"},{"parent":"root","lineStyle":{"randomLineColor":"rgb(153,204,255)","lineColor":"#F57F17"},"children":[{"parent":"b653f7534587","children":[],"id":"06a83c1e3750","title":"在开始重新渲染之前，React&nbsp;会有意地进行“等待”，直到所有在组件的事件处理函数内调用的&nbsp;setState()&nbsp;完成之后。这样可以通过避免不必要的重新渲染来提升性能。","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"b653f7534587","children":[{"parent":"fe34edd8c073","children":[],"id":"d35dab68e13e","title":"这样会破坏掉&nbsp;props&nbsp;和&nbsp;state&nbsp;之间的一致性，造成一些难以&nbsp;debug&nbsp;的问题。"},{"parent":"fe34edd8c073","children":[],"id":"97f21e659483","title":"这样会让一些我们正在实现的新功能变得无法实现。"}],"id":"fe34edd8c073","title":"为什么&nbsp;React&nbsp;不能立即更新&nbsp;this.state，而不对组件进行重新渲染呢。<br>主要有两个原因：","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":12,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"b653f7534587","title":"为什么&nbsp;React&nbsp;不同步地更新&nbsp;this.state？"},{"parent":"root","lineStyle":{"lineColor":"#FFE0B2"},"children":[{"parent":"2c0b8a719934","children":[],"id":"ce827c72d066","title":"或许需要。"},{"parent":"2c0b8a719934","children":[],"id":"4be8425625a9","title":"在添加额外的库之前，最好先了解清楚&nbsp;React&nbsp;能干什么。你也可以只使用&nbsp;React&nbsp;来构建出一个比较复杂的应用"}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":12},"id":"2c0b8a719934","title":"我应该使用一个像&nbsp;Redux&nbsp;或&nbsp;MobX&nbsp;那样的&nbsp;state&nbsp;管理库吗？<br>"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"rgb(255, 83, 92)","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":15,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"组件状态","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"46","text":"&#xe693"}],"structure":"mind_right"}},"meta":{"exportTime":"2022-04-11 07:32:08","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-11 07:25:44","modified":"2022-04-11 07:31:24","title":"7.4组件状态","category":"mind_free"},"id":"625367785653bb0743ce1570","type":"ProcessOn Schema File","version":"1.0"}}