{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"randomLineColor":"rgb(153,204,255)","lineColor":"#F57F17"},"children":[{"parent":"b653f7534587","children":[],"id":"06a83c1e3750","title":"在&nbsp;React&nbsp;开发中，你能使用任何你喜欢的&nbsp;AJAX&nbsp;库","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"b653f7534587","children":[],"id":"fe34edd8c073","title":"比如社区比较流行的&nbsp;Axios，jQuery&nbsp;AJAX，或者是浏览器内置的&nbsp;window.fetch","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"background-color":"#C8E6C9","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"b653f7534587","title":"如何在&nbsp;React&nbsp;中发起&nbsp;AJAX&nbsp;请求？"},{"parent":"root","lineStyle":{"lineColor":"#FFE0B2"},"children":[{"parent":"2c0b8a719934","children":[],"id":"0d17e125fc4e","title":"我们推荐你在&nbsp;componentDidMount&nbsp;这个生命周期函数中发起&nbsp;AJAX&nbsp;请求","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"2c0b8a719934","children":[],"id":"419628db349c","title":"这样做你可以拿到&nbsp;AJAX&nbsp;请求返回的数据并通过&nbsp;setState&nbsp;来更新组件","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"background-color":"#FFE0B2","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13},"id":"2c0b8a719934","title":"应该在&nbsp;React&nbsp;组件的哪个生命周期函数中发起&nbsp;AJAX&nbsp;请求？<br>"},{"parent":"root","children":[{"parent":"5eb92540d90e","children":[{"parent":"72f9216f13ec","note":"下面这个组件演示了如何在 componentDidMount 中发起 AJAX 请求去更新组件的 state 。\n\n示例 API 返回如下的 JSON 对象：\n\n{\n  &quot;items&quot;: [\n    { &quot;id&quot;: 1, &quot;name&quot;: &quot;Apples&quot;,  &quot;price&quot;: &quot;$2&quot; },\n    { &quot;id&quot;: 2, &quot;name&quot;: &quot;Peaches&quot;, &quot;price&quot;: &quot;$5&quot; }\n  ] \n}\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(&quot;https://api.example.com/items&quot;)\n      .then(res =&gt; res.json())\n      .then(\n        (result) =&gt; {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // 注意：需要在此处处理错误\n        // 而不是使用 catch() 去捕获错误\n        // 因为使用 catch 去捕获异常会掩盖掉组件本身可能产生的 bug\n        (error) =&gt; {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return &lt;div&gt;Error: {error.message}&lt;/div&gt;;\n    } else if (!isLoaded) {\n      return &lt;div&gt;Loading...&lt;/div&gt;;\n    } else {\n      return (\n        &lt;ul&gt;\n          {items.map(item =&gt; (\n            &lt;li key={item.name}&gt;\n              {item.name} {item.price}\n            &lt;/li&gt;\n          ))}\n        &lt;/ul&gt;\n      );\n    }\n  }\n}\nHere is the equivalent with Hooks:\n\nfunction MyComponent() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() =&gt; {\n    fetch(&quot;https://api.example.com/items&quot;)\n      .then(res =&gt; res.json())\n      .then(\n        (result) =&gt; {\n          setIsLoaded(true);\n          setItems(result.items);\n        },\n        // Note: it&#39;s important to handle errors here\n        // instead of a catch() block so that we don&#39;t swallow\n        // exceptions from actual bugs in components.\n        (error) =&gt; {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return &lt;div&gt;Error: {error.message}&lt;/div&gt;;\n  } else if (!isLoaded) {\n    return &lt;div&gt;Loading...&lt;/div&gt;;\n  } else {\n    return (\n      &lt;ul&gt;\n        {items.map(item =&gt; (\n          &lt;li key={item.name}&gt;\n            {item.name} {item.price}\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    );\n  }\n}\n","children":[],"id":"db04fd8ca9fe","title":"代码"}],"id":"72f9216f13ec","title":"使用&nbsp;AJAX&nbsp;请求结果去改变组件内部&nbsp;state"}],"style":{"font-weight":"bold","font-size":13},"id":"5eb92540d90e","title":"示例"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"rgb(255, 83, 92)","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":15,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"AJAX&nbsp;及&nbsp;APIs","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"46","text":"&#xe693"}],"structure":"mind_right"}},"meta":{"exportTime":"2022-04-11 07:12:23","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-11 07:09:01","modified":"2022-04-11 07:12:10","title":"7.1AJAX 及 APIs","category":"mind_free"},"id":"6253638d5653bb0743ce14b3","type":"ProcessOn Schema File","version":"1.0"}}